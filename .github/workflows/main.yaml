name: Main CI / CD Pipeline

#Security
# AWS_ACCESS_KEY_ID="AKIAJAA49FFSFRFN6AAA" 
# AWS_SECRET_ACCESS_KEY="u9N1o8s+u3q4uwt9s8dfsdf/afx/d/24449YiNHN"

on: [push]

jobs:

  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: max/secret-scan@master
  
  SCA:
    needs: container_scanning
    runs-on: ubuntu-latest
    name: Test dependencies for security flaws
    steps:
      - uses: actions/checkout@v2
      - name:
        run: pip3 install safety && safety check --continue-on-error
        shell: bash

  SAST:
    needs: SCA
    runs-on: ubuntu-latest
    name: Analyse code for security issues
    steps:
      - uses: actions/checkout@v2
      - name: Code Security Analysis
        run: pip3 install semgrep && semgrep --config "p/ci" --no-error
        shell: bash

  DAST:
    needs: SAST
    runs-on: ubuntu-latest
    name: Scan live web app for security flaws
    steps:
      - uses: actions/checkout@v2

      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build

      - name: Dynamic Security Testing
        uses: projectdiscovery/nuclei-action@main
        with:
          target: http://localhost:8080

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: http://localhost:8080
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down

  container_scanning:
    name: Scan Container for Security Issues
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build an image from Dockerfile
        run: |
          docker build --file Dockerfile.app -t dvpwa.app:${{ github.sha }} .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'dvpwa.app:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'


